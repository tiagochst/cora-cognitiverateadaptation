--- a/config.mk
+++ b/config.mk
@@ -106,15 +106,17 @@ CONFIG_MAC80211=m
 # CONFIG_MAC80211_DRIVER_API_TRACER=y
 
 # choose between pid and minstrel as default rate control algorithm
-CONFIG_MAC80211_RC_DEFAULT=minstrel_ht
-CONFIG_MAC80211_RC_DEFAULT_MINSTREL=y
+CONFIG_MAC80211_RC_DEFAULT=cora
+CONFIG_MAC80211_RC_DEFAULT_CORA=y
+CONFIG_MAC80211_RC_DEFAULT_MINSTREL=n
 # CONFIG_MAC80211_RC_DEFAULT_PID=y
 # This is the one used by our compat-wireless net/mac80211/rate.c
 # in case you have and old kernel which is overriding this to pid.
-CONFIG_COMPAT_MAC80211_RC_DEFAULT=minstrel_ht
+CONFIG_COMPAT_MAC80211_RC_DEFAULT=cora
 # CONFIG_MAC80211_RC_PID=y
-CONFIG_MAC80211_RC_MINSTREL=y
-CONFIG_MAC80211_RC_MINSTREL_HT=y
+CONFIG_MAC80211_RC_MINSTREL=n
+CONFIG_MAC80211_RC_CORA=y
+CONFIG_MAC80211_RC_MINSTREL_HT=n
 # CONFIG_MAC80211_LEDS=y
 
 # enable mesh networking too
--- a/net/mac80211/Makefile
+++ b/net/mac80211/Makefile
@@ -48,6 +48,10 @@ CFLAGS_driver-trace.o := -I$(src)
 rc80211_pid-y := rc80211_pid_algo.o
 rc80211_pid-$(CONFIG_MAC80211_DEBUGFS) += rc80211_pid_debugfs.o
 
+# objects for CORA algorithm
+rc80211_cora-y := rc80211_cora.o
+rc80211_cora-$(CONFIG_MAC80211_DEBUGFS) += rc80211_cora_debugfs.o
+
 rc80211_minstrel-y := rc80211_minstrel.o
 rc80211_minstrel-$(CONFIG_MAC80211_DEBUGFS) += rc80211_minstrel_debugfs.o
 
@@ -55,6 +59,7 @@ rc80211_minstrel_ht-y := rc80211_minstre
 rc80211_minstrel_ht-$(CONFIG_MAC80211_DEBUGFS) += rc80211_minstrel_ht_debugfs.o
 
 mac80211-$(CONFIG_MAC80211_RC_PID) += $(rc80211_pid-y)
+mac80211-$(CONFIG_MAC80211_RC_CORA) += $(rc80211_cora-y)
 mac80211-$(CONFIG_MAC80211_RC_MINSTREL) += $(rc80211_minstrel-y)
 mac80211-$(CONFIG_MAC80211_RC_MINSTREL_HT) += $(rc80211_minstrel_ht-y)
 
--- a/net/mac80211/main.c
+++ b/net/mac80211/main.c
@@ -935,14 +935,18 @@ static int __init ieee80211_init(void)
 	BUILD_BUG_ON(offsetof(struct ieee80211_tx_info, driver_data) +
 		     IEEE80211_TX_INFO_DRIVER_DATA_SIZE > sizeof(skb->cb));
 
-	ret = rc80211_minstrel_init();
+	ret = rc80211_cora_init();
 	if (ret)
 		return ret;
 
-	ret = rc80211_minstrel_ht_init();
+	ret = rc80211_minstrel_init();
 	if (ret)
 		goto err_minstrel;
 
+	ret = rc80211_minstrel_ht_init();
+	if (ret)
+		goto err_minstrel_ht;
+
 	ret = rc80211_pid_init();
 	if (ret)
 		goto err_pid;
@@ -956,8 +960,10 @@ static int __init ieee80211_init(void)
 	rc80211_pid_exit();
  err_pid:
 	rc80211_minstrel_ht_exit();
- err_minstrel:
+ err_minstrel_ht:
 	rc80211_minstrel_exit();
+ err_minstrel:
+    rc80211_cora_exit();
 
 	return ret;
 }
@@ -967,6 +973,7 @@ static void __exit ieee80211_exit(void)
 	rc80211_pid_exit();
 	rc80211_minstrel_ht_exit();
 	rc80211_minstrel_exit();
+	rc80211_cora_exit();
 
 	/*
 	 * For key todo, it'll be empty by now but the work
--- a/net/mac80211/rate.h
+++ b/net/mac80211/rate.h
@@ -160,5 +160,17 @@ static inline void rc80211_minstrel_ht_e
 }
 #endif
 
+#ifdef CONFIG_MAC80211_RC_CORA
+extern int rc80211_cora_init(void);
+extern void rc80211_cora_exit(void);
+#else
+static inline int rc80211_cora_init(void)
+{
+   return 0;
+}
+static inline void rc80211_cora_exit(void)
+{
+}
+#endif
 
 #endif /* IEEE80211_RATE_H */
